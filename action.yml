name: Generate SDK Action
description: Generate an SDK using the OpenAPI Generator Project
inputs: 
  file-source: 
    description: '`local` or `remote` - where to clone the api specs from'
    default: remote
    required: false
  specs-directory: 
    description: "If `file-source` is set to local, the directory with the api specs to be stitched together"
    default: ./api-specs
    required: false
  spec-merge-config: 
    description: The path to the config file for the openapi-merge-cli tool
    default: utils/openapi-merge.yml
    required: false
  branch-name: 
    description: Branch name
    required: true
  username: 
    description: Github auth username
    required: true
  token: 
    description: Github auth token
    required: true
  openapi-generator-version: 
    description: The OpenAPI Generator project version, in `v5.4.0` format
    required: false
    default: 'v5.4.0'
  language: 
    description: The generator name (`-g`) argument for the openapi generator
    required: true
  config:
    description: The configuration (`-c`) argument for the openapi generator
    required: false

# outputs: 

runs: 
  using: composite
  steps: 
    - name: Create and push branch
      run: |
          git config user.email "dx@bandwidth.com"
          git config user.name ${{ inputs.username }}
          git checkout -b ${{ inputs.branch-name }}
          mkdir specs
      shell: bash
    
    - name: Create and push branch with upstream api specs
      if: inputs.file-source == 'remote' 
      run: |
          mkdir api-specs
          git clone --branch ${{ inputs.branch-name }} https://${{ inputs.username }}:${{ inputs.token }}@github.com/Bandwidth/api-specs api-specs
          rm -r api-specs/.git
          cp -TRv api-specs/internal specs
          rm -r api-specs
      shell: bash

    - name: Create and push branch with local api specs
      if: inputs.file-source == 'local'
      run: |
        grep -A3 'output:' ./utils/test-openapi-merge.yml | tail -n1 | cut -c 9- 
        exit 1
      shell: bash
   
    - name: Stich Specs Together
      run: |
        npm i openapi-merge-cli
        npx openapi-merge-cli --config {{ inputs.spec-merge-config }}
        ls -la 
      shell: bash

    - name: Clone OpenAPI Generator Project
      run: |
        mkdir generator
        git clone -b ${{ inputs.openapi-generator-version }} --single-branch https://github.com/Bandwidth/openapi-generator generator
      shell: bash

    - name: Build SDK
      run: |
        echo "help me"
      shell: bash

    - name: Cleanup
      run: |
          rm -r generator
          rm -r specs
          git add .
          git commit -m "Generate SDK"
          git push origin ${{ inputs.branch-name }}
      shell: bash

    - name: Open Pull Request
      run: |
        hub pull-request --base Bandwidth:main -m '${{ inputs.branch-name }}' -m 'Generate SDK with Upstream API Spec Changes'
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: bash

