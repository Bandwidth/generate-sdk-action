name: Generate SDK Action
description: Generate an SDK using the OpenAPI Generator Project
inputs: 
  branch-name: 
    description: Branch name
    required: true
  user-email: 
    description: Git user email
    default: dx@bandwidth.com
    required: false
  username: 
    description: Github auth username
    required: true
  token: 
    description: Github auth token
    required: true
  specs-organization: 
    description: Owner of the remote repository
    default: Bandwidth
    required: false
  specs-repository: 
    description: the remote repository to clone
    default: api-specs 
    required: false
  openapi-generator-version: 
    description: The OpenAPI Generator project version, in `6.0.1` format
    required: false
    default: '6.0.1'
  api-spec-path: 
    description: The destination of the API Specification to generate a client from
    required: false
    default: ./remote/bandwidth.yml
  language: 
    description: The generator name (language) (`-g`) argument for the openapi-generator-cli
    required: true
  config:
    description: The configuration (`-c`) argument for the openapi-generator-cli
    required: true

outputs: 
  pr-number: 
    description: "The number of the PR that was opened"
    value: ${{ steps.output-pr-number.outputs.pr-number }}

runs: 
  using: composite
  steps: 
    - name: Setup Node 
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Create and push branch
      run: |
          git config user.email ${{ inputs.user-email }}
          git config user.name ${{ inputs.username }}
          git fetch origin
          if [ -z $(git show-ref refs/remotes/origin/${{ inputs.branch-name }}) ]
          then
            git checkout -b ${{ inputs.branch-name }}
            git push origin ${{ inputs.branch-name }} 
          else
            git switch -c ${{ inputs.branch-name }} origin/${{ inputs.branch-name }}
            git pull
          fi
      shell: bash
    
    - name: Create and push branch with upstream api specs
      run: |
          mkdir remote
          git clone --branch ${{ inputs.branch-name }} https://${{ inputs.username }}:${{ inputs.token }}@github.com/${{ inputs.specs-organization }}/${{ inputs.specs-repository }} remote
          rm -r remote/.git
      shell: bash

    - name: Setup OpenAPI Generator CLI
      run: |
        npm install @openapitools/openapi-generator-cli -g
        openapi-generator-cli version-manager set ${{ inputs.openapi-generator-version }}
      shell: bash

    - name: Build SDK
      run: |
        openapi-generator-cli generate \
         -g ${{ inputs.language }} \
         -i ${{ inputs.api-spec-path }}  \
         -c ${{ inputs.config }} 
      shell: bash
    
    - name: Cleanup
      run: |
        rm -r remote
      shell: bash

    - name: Commit
      run: |
          git diff
          if [ $(git diff --exit-code) ]
          then
            echo "No Changes"
            git commit --allow-empty -m "Generate SDK (No Changes)"
          else 
            echo "Changes"
            git add .
            git commit -m "Generate SDK with ${{ inputs.generator-organization }}:${{ inputs.generator-repository }} ${{ inputs.openapi-generator-version }}"
          fi
          git push origin ${{ inputs.branch-name }}
      shell: bash
